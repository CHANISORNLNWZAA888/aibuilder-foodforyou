import streamlit as st
import pandas as pd
from sentence_transformers import SentenceTransformer, util
import torch

# Load model with caching
@st.cache_resource
def load_model():
    hf_token = "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"
    return SentenceTransformer("Chanisorn/thai-food-mpnet-tuned", use_auth_token=hf_token)

# Load data with caching
@st.cache_data
def load_data():
    return pd.read_csv("Copy of Copy of 500 lable ‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì superclean + ‡∏°‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≤‡∏ß‡∏Ç‡∏≠‡∏á‡∏´‡∏ß‡∏≤‡∏ô + query - Sheet1.csv")

# Embed corpus with caching ‚Äî FIXED: renamed model to _model
@st.cache_resource
def embed_corpus(_model, texts):
    return _model.encode(texts, convert_to_tensor=True)

# Load resources
model = load_model()
df = load_data()

# Prepare corpus text for embedding
corpus_texts = (df["‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö_‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì"].fillna("") + " " + df["query1 ‡∏≠‡∏¢‡∏≤‡∏Å‡∏Å‡∏¥‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Ñ‡∏£‡∏ö"].fillna("")).tolist()
corpus_embeddings = embed_corpus(model, corpus_texts)

# Streamlit UI
st.title("üçú Thai Food Search")
query = st.text_input("‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏°‡∏ô‡∏π ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡πà‡∏ß‡∏ô‡∏ú‡∏™‡∏°‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡∏Å‡∏¥‡∏ô:")

if query:
    # Embed the query
    query_embedding = model.encode(query, convert_to_tensor=True)
    scores = util.cos_sim(query_embedding, corpus_embeddings)[0]

    # Get top 3 matches
    top_k = min(3, len(df))
    results = torch.topk(scores, k=top_k)

    st.subheader("üìå ‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:")

    for idx in results.indices:
        row = df.iloc[idx.item()]  # Convert tensor to int
        st.markdown(f"""
        ### üçΩÔ∏è {row['‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£']}
        - üßÇ **‡∏™‡πà‡∏ß‡∏ô‡∏ú‡∏™‡∏°:** {row.get('‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö_‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏')}
        """)
